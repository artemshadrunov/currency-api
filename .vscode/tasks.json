{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run tests with coverage",
            "type": "shell",
            "dependsOn": [
                "build"
            ],
            "command": "coverlet",
            "args": [
                "CurrencyConverter.Tests/bin/Debug/net8.0/CurrencyConverter.Tests.dll",
                "--target",
                "dotnet",
                "--targetargs",
                "test --no-build --no-restore",
                "--output",
                "coverage/coverage.cobertura.xml",
                "--format",
                "cobertura",
                "--exclude-by-file",
                "**/CurrencyConverter.Core/Program.cs",
                "**/CurrencyConverter.Core/Startup.cs",
                "**/CurrencyConverter.Core/LambdaEntryPoint.cs",
                "**/CurrencyConverter.Core/Controllers/CurrencyConverterController.cs",
                "**/CurrencyConverter.Core/Controllers/AuthController.cs",
                "**/CurrencyConverter.Core/Infrastructure/ApplicationConfiguration.cs"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Generate coverage HTML report",
            "type": "shell",
            "command": "reportgenerator",
            "args": [
                "-reports:coverage/coverage.cobertura.xml",
                "-targetdir:coverage/html",
                "-reporttypes:Html"
            ],
            "group": "test",
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Start App",
            "type": "shell",
            "command": "docker-compose down --remove-orphans --volumes; docker-compose up --detach redis seq jaeger; dotnet run --project CurrencyConverter.Core",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "CDK Deploy",
            "type": "shell",
            "command": "Set-Location -Path '${workspaceFolder}/CurrencyConverter.Infrastructure'; cdk bootstrap --profile test-account; cdk synth --profile test-account; cdk deploy --profile test-account",
            "options": {
                "env": {
                    "AWS_SHARED_CREDENTIALS_FILE": "${workspaceFolder}/.project-aws/credentials",
                    "AWS_CONFIG_FILE": "${workspaceFolder}/.project-aws/config"
                }
            },
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            }
        }
    ]
}